{"version":3,"sources":["api.js","Websites/WebsiteListItem.js","General/BackButton.js","Websites/SelectRegistrarItem.js","Websites/SelectHostItem.js","General/TextInput.js","Websites/EditWebsiteForm.js","General/CopyableText.js","Registrars/EditRegistrarForm.js","Registrars/RegistrarTitle.js","Registrars/RegistrarInfo.js","Hosts/EditHostForm.js","Hosts/HostTitle.js","Hosts/HostInfo.js","Websites/WebsiteInfo.js","Websites/AddWebsiteForm.js","General/Search.js","Websites/WebsiteList.js","Registrars/RegistrarListItem.js","Registrars/AddRegistrarForm.js","Registrars/RegistrarList.js","Hosts/HostListItem.js","Hosts/AddHostForm.js","Hosts/HostList.js","App.js","index.js"],"names":["WEBSITE_URL","REGISTRAR_URL","HOST_URL","getWebsites","_getWebsites","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","credentials","then","resp","ok","status","json","data","errorMessage","message","stop","searchWebsites","_x2","src_api_searchWebsites","_callee3","query","getURL","_context3","createWebsite","_x3","_createWebsite","_callee4","website","_context4","method","headers","Headers","Content-Type","body","JSON","stringify","updateWebsite","_x4","src_api_updateWebsite","_callee5","updateURL","_context5","_id","removeWebsite","_x5","_removeWebsite","_callee6","id","deleteURL","_context6","getRegistrars","_getRegistrars","_callee7","_context7","searchRegistrars","_x6","src_api_searchRegistrars","_callee8","_context8","createRegistrar","_x7","_createRegistrar","_callee9","registrar","_context9","updateRegistrar","_x8","src_api_updateRegistrar","_callee10","_context10","removeRegistrar","_x9","_removeRegistrar","_callee11","_context11","getHosts","_getHosts","_callee12","_context12","searchHosts","_x10","src_api_searchHosts","_callee13","_context13","createHost","_x11","_createHost","_callee14","host","_context14","updateHost","_x12","src_api_updateHost","_callee15","_context15","removeHost","_x13","_removeHost","_callee16","_context16","WebsiteListItem","_ref","name","url","onSelect","react_default","createElement","onClick","BackButton","className","SelectRegistrarItem","value","SelectHostItem","TextInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasFocus","handleBlur","bind","assertThisInitialized","handleFocus","setState","placeholder","type","onChange","onFocus","onBlur","Component","EditWebsiteForm","websiteName","ftp","userName","password","notes","handleChange","handleSubmit","e","defineProperty","target","preventDefault","updatedWebsite","disableEditMode","registrars","map","r","Websites_SelectRegistrarItem","key","hosts","h","Websites_SelectHostItem","General_TextInput","rows","CopyableText","copyToClipboard","textArea","React","createRef","current","select","document","execCommand","focus","ref","readOnly","EditRegistrarForm","registrarName","updatedRegistrar","RegistrarTitle","selectedWebsite","General_BackButton","goBack","RegistrarInfo","enableEditMode","enableViewWebsites","isEnabled","Registrars_RegistrarTitle","General_CopyableText","disabled","websites","enableState","deleteRegistrar","Registrars_EditRegistrarForm","Websites_WebsiteList","updateWebsites","selectedRegistrar","renderRegistrarEdit","renderRegistrarWebsites","renderRegistrarInfo","EditHostForm","hostName","updatedHost","HostTitle","HostInfo","Hosts_HostTitle","deleteHost","Hosts_EditHostForm","selectedHost","renderHostEdit","renderHostWebsites","renderHostInfo","WebsiteInfo","enableViewRegistrar","enableViewHost","deleteWebsite","Websites_EditWebsiteForm","Registrars_RegistrarInfo","Hosts_HostInfo","renderWebsiteEdit","renderWebsiteInfo","AddWebsiteForm","addWebsite","disableAddWebsite","Search","searchQuery","clearSearch","search","console","log","style","display","WebsiteList","enableAddWebsite","selectWebsite","deselectWebsite","apiCalls","newWebsite","concat","toConsumableArray","updatedSite","filter","w","matchingSites","allSites","_this2","websiteListItems","Websites_WebsiteListItem","assign","General_Search","Websites_AddWebsiteForm","Websites_WebsiteInfo","renderAddWebsite","renderWebsiteList","RegistrarListItem","AddRegistrarForm","addRegistrar","disableAddRegistrar","RegistrarList","enableAddRegistrar","selectRegistrar","deselectRegistrar","newRegistrar","updateRegistrars","updatedReg","matchingRegistrars","allRegistrars","registrarListItems","Registrars_RegistrarListItem","Registrars_AddRegistrarForm","renderAddRegistrar","renderRegistrarList","HostListItem","AddHostForm","addHost","disableAddHost","HostList","enableAddHost","selectHost","deselectHost","newHost","updateHosts","matchingHosts","allHosts","hostListItems","Hosts_HostListItem","Hosts_AddHostForm","renderAddHost","renderHostList","App","currentView","loadWebsites","loadRegistrars","loadHosts","loadAll","view","setView","back","Registrars_RegistrarList","Hosts_HostList","renderWebsiteView","renderRegistrarView","renderHostView","renderHomeView","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.258d8b65.chunk.js","sourcesContent":["const WEBSITE_URL = 'http://localhost:8080/api/websites/';\r\nconst REGISTRAR_URL = 'http://localhost:8080/api/registrars/';\r\nconst HOST_URL = 'http://localhost:8080/api/hosts/';\r\n// --------------------------------------------- //\r\n// API functions for making calls to the backend //\r\n// --------------------------------------------- //\r\n\r\n// --------------------------------------------- //\r\n// ---------------- Website API ---------------- //\r\n// --------------------------------------------- //\r\n\r\nexport async function getWebsites() {\r\n  return fetch(WEBSITE_URL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function getWebsite(id){\r\n  const getURL = WEBSITE_URL + id;\r\n  return fetch(getURL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function searchWebsites(query){\r\n  const getURL = WEBSITE_URL + 'search/' + query;\r\n  return fetch(getURL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function createWebsite(website) {\r\n  return fetch(WEBSITE_URL, {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(website),\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function updateWebsite(website){\r\n  const updateURL = WEBSITE_URL + website._id;\r\n\r\n  return fetch(updateURL, {\r\n    method: 'put',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(website),\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function removeWebsite(id){\r\n  const deleteURL = WEBSITE_URL + id;\r\n\r\n  return fetch(deleteURL, {\r\n    method: 'delete',\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\n// --------------------------------------------- //\r\n// --------------- Registrar API --------------- //\r\n// --------------------------------------------- //\r\n\r\nexport async function getRegistrars() {\r\n  return fetch(REGISTRAR_URL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function searchRegistrars(query){\r\n  const getURL = REGISTRAR_URL + 'search/' + query;\r\n  return fetch(getURL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function createRegistrar(registrar) {\r\n  return fetch(REGISTRAR_URL, {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(registrar),\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function updateRegistrar(registrar){\r\n  const updateURL = REGISTRAR_URL + registrar._id;\r\n\r\n  return fetch(updateURL, {\r\n    method: 'put',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(registrar),\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function removeRegistrar(id){\r\n  const deleteURL = REGISTRAR_URL + id;\r\n\r\n  return fetch(deleteURL, {\r\n    method: 'delete',\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\n// --------------------------------------------- //\r\n// ------------------ Host API ----------------- //\r\n// --------------------------------------------- //\r\n\r\nexport async function getHosts() {\r\n  return fetch(HOST_URL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function searchHosts(query){\r\n  const getURL = HOST_URL + 'search/' + query;\r\n  return fetch(getURL, {credentials: 'include'})\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function createHost(host) {\r\n  return fetch(HOST_URL, {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(host),\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function updateHost(host){\r\n  const updateURL = HOST_URL + host._id;\r\n\r\n  return fetch(updateURL, {\r\n    method: 'put',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(host),\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function removeHost(id){\r\n  const deleteURL = HOST_URL + id;\r\n\r\n  return fetch(deleteURL, {\r\n    method: 'delete',\r\n    credentials: 'include'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}","import React from 'react';\r\n\r\nconst WebsiteListItem = ({name, url, onSelect}) => (\r\n  <li>\r\n    <span onClick={onSelect}>\r\n      <strong>{name}</strong>: {url}\r\n    </span>\r\n  </li>\r\n)\r\n\r\nexport default WebsiteListItem;","import React from 'react';\r\n\r\nconst BackButton = ({onClick}) => (\r\n    <div onClick={onClick} className=\"leftAlign\">Back</div>\r\n)\r\n\r\nexport default BackButton;","import React from 'react';\r\n\r\nconst SelectRegistrarItem = ({registrar}) => (\r\n  <option\r\n    value={registrar._id}\r\n  >\r\n    {registrar.name}\r\n  </option>\r\n)\r\n\r\nexport default SelectRegistrarItem;","import React from 'react';\r\n\r\nconst SelectHostItem = ({host}) => (\r\n  <option\r\n    value={host._id}\r\n  >\r\n    {host.name}\r\n  </option>\r\n)\r\n\r\nexport default SelectHostItem;","import React, {Component} from 'react';\r\n\r\nclass TextInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasFocus: false\r\n    };\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n  }\r\n\r\n  handleBlur() {\r\n    // The onBlur DOM event occurs when an object loses focus\r\n    this.setState({hasFocus: false});\r\n  }\r\n\r\n  handleFocus() {\r\n    // The onFocus DOM event occurs when an object has focus\r\n    this.setState({hasFocus: true});\r\n  }\r\n\r\n  render() {\r\n    var placeholder = this.props.placeholder;\r\n    if(this.props.value) {\r\n      // If value is passed as a prop, render placeholder and value, for example: \"User Name: Bilbo\" where\r\n      // placeholder is \"User Name\" and value is \"Bilbo\"\r\n      placeholder = placeholder + ': ' + this.props.value;\r\n    }\r\n    return (\r\n      <input \r\n        name={this.props.name}\r\n        type='text'\r\n        value={this.state.hasFocus? this.props.value : ''}\r\n        onChange={this.props.onChange}\r\n        placeholder={placeholder}\r\n        onFocus = {this.handleFocus}\r\n        onBlur= {this.handleBlur}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextInput;","import React, {Component} from 'react';\r\nimport SelectRegistrarItem from './SelectRegistrarItem';\r\nimport SelectHostItem from './SelectHostItem';\r\nimport TextInput from '../General/TextInput';\r\n\r\nclass EditWebsiteForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      websiteName: this.props.website.name,\r\n      url: this.props.website.url,\r\n      ftp: this.props.website.ftp,\r\n      userName: this.props.website.userName,\r\n      password: this.props.website.password,\r\n      notes: this.props.website.notes,\r\n      registrar: this.props.website.registrar,\r\n      host: this.props.website.host\r\n\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    if(this.state.websiteName && this.state.url){\r\n      // Create updated website object\r\n      var updatedWebsite = this.props.website;\r\n      updatedWebsite.name = this.state.websiteName;\r\n      updatedWebsite.url = this.state.url;\r\n      updatedWebsite.ftp = this.state.ftp;\r\n      updatedWebsite.userName = this.state.userName;\r\n      updatedWebsite.password = this.state.password;\r\n      updatedWebsite.notes = this.state.notes;\r\n      updatedWebsite.registrar = this.state.registrar;\r\n      updatedWebsite.host = this.state.host;\r\n\r\n      // ObjectIDs cannot be empty strings, but they can be null\r\n      if(updatedWebsite.registrar === ''){updatedWebsite.registrar = null}\r\n      if(updatedWebsite.host === ''){updatedWebsite.host = null}\r\n\r\n      // Call updateWebsite(), which is passed from WebsiteList as a prop\r\n      this.props.updateWebsite(updatedWebsite);\r\n      this.props.disableEditMode();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const registrars = this.props.registrars.map((r) => (\r\n      <SelectRegistrarItem\r\n        key={r._id}\r\n        registrar={r}\r\n        id={r._id}\r\n      />\r\n    ));\r\n    const hosts = this.props.hosts.map((h) => (\r\n      <SelectHostItem\r\n        key={h._id}\r\n        host={h}\r\n        id={h._id}\r\n      />\r\n    ));\r\n    return (\r\n      <section id=\"websiteEditForm\">\r\n        <form id=\"websiteEditInput\">\r\n          <TextInput\r\n            name='websiteName'\r\n            value={this.state.websiteName}\r\n            onChange={this.handleChange}\r\n            placeholder='Website'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='url'\r\n            value={this.state.url}\r\n            onChange={this.handleChange}\r\n            placeholder='URL'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='ftp'\r\n            value={this.state.ftp}\r\n            onChange={this.handleChange}\r\n            placeholder='FTP'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='Username'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            placeholder='Password'\r\n          />\r\n          <select\r\n            name='registrar'\r\n            onChange={this.handleChange}\r\n          >\r\n            {this.props.website.registrar ? \r\n              <option value={this.props.website.registrar._id}>Current Registrar: {this.props.website.registrar.name}</option>\r\n            : <option value=''>---Choose a Registrar---</option>\r\n            }\r\n            <option value=''>----------None----------</option>\r\n            {registrars}\r\n          </select>\r\n          <select\r\n            name='host'\r\n            onChange={this.handleChange}\r\n          >\r\n            {this.props.website.host ? \r\n              <option value={this.props.website.host._id}>Current Host: {this.props.website.host.name}</option>\r\n            : <option value=''>---Choose a Host---</option>\r\n            }\r\n            <option value=''>-------None--------</option>\r\n            {hosts}\r\n          </select>\r\n          <textarea\r\n            rows='10'\r\n            name='notes'\r\n            value={this.state.notes}\r\n            onChange={this.handleChange}\r\n            placeholder='Notes...'\r\n          />\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Update Website</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditWebsiteForm;","import React, { Component } from 'react';\r\n\r\nclass CopyableText extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasFocus: false\r\n    };\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.copyToClipboard = this.copyToClipboard.bind(this);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  handleBlur() {\r\n    // The onBlur DOM event occurs when an object loses focus\r\n    this.setState({hasFocus: false});\r\n    this.textArea.current.value = this.props.value;\r\n  }\r\n\r\n  handleFocus() {\r\n    // The onFocus DOM event occurs when an object has focus\r\n    this.setState({hasFocus: true});\r\n  }\r\n\r\n  copyToClipboard(e) {\r\n    this.textArea.current.select();\r\n    document.execCommand('copy');\r\n    e.target.focus();\r\n    this.textArea.current.value = 'Copied to Clipboard!';\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <input\r\n        ref={this.textArea}\r\n        //rows='1'\r\n        type='text'\r\n        value={this.props.value}\r\n        onClick={this.copyToClipboard}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        readOnly\r\n      />\r\n    )\r\n  }\r\n\r\n}\r\nexport default CopyableText;","import React, {Component} from 'react';\r\nimport TextInput from '../General/TextInput';\r\n\r\nclass EditRegistrarForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      registrarName: this.props.registrar.name,\r\n      userName: this.props.registrar.userName,\r\n      password: this.props.registrar.password,\r\n      notes: this.props.registrar.notes\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    if(this.state.registrarName) {\r\n      // Create updated registrar object\r\n      var updatedRegistrar = this.props.registrar;\r\n      updatedRegistrar.name = this.state.registrarName;\r\n      updatedRegistrar.userName = this.state.userName;\r\n      updatedRegistrar.password = this.state.password;\r\n      updatedRegistrar.notes = this.state.notes;\r\n\r\n      // Call updateRegistrar(), which is passed from RegistrarList as a prop\r\n      this.props.updateRegistrar(updatedRegistrar);\r\n      this.props.disableEditMode();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"registrarEditForm\">\r\n        <form id=\"registrarEditInput\">\r\n          <TextInput\r\n            type='text'\r\n            name='registrarName'\r\n            value={this.state.registrarName}\r\n            onChange={this.handleChange}\r\n            placeholder='Registrar'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='Username'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            placeholder='Password'\r\n          />\r\n          <textarea\r\n            rows='10'\r\n            name='notes'\r\n            value={this.state.notes}\r\n            onChange={this.handleChange}\r\n            placeholder='Notes...'\r\n          />\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Update Registrar</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditRegistrarForm;","import React, { Component } from 'react';\r\nimport BackButton from '../General/BackButton'\r\n\r\nclass RegistrarTitle extends Component {\r\n\r\n  render() {\r\n    if(!this.props.selectedWebsite) {\r\n      return(\r\n        <div id='registrarTitle'>\r\n          <BackButton onClick={this.props.goBack}></BackButton>\r\n          <h2>Registrar: {this.props.registrarName}</h2>\r\n        </div>\r\n      )\r\n    }\r\n    return(\r\n      <h3>Registrar: {this.props.registrarName}</h3>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegistrarTitle;","import React, { Component } from 'react';\r\nimport BackButton from '../General/BackButton';\r\nimport EditRegistrarForm from './EditRegistrarForm';\r\nimport WebsiteList from '../Websites/WebsiteList';\r\nimport CopyableText from '../General/CopyableText';\r\nimport RegistrarTitle from './RegistrarTitle';\r\n\r\n// Display registrar info. Rendered from RegistrarList and WebsiteInfo.\r\nclass RegistrarInfo extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      enableEditMode: false,\r\n      enableViewWebsites: false\r\n    }\r\n  }\r\n\r\n  enableState(state, isEnabled) {\r\n    this.setState({[state] : isEnabled}); // [state] is a computed property name\r\n  }\r\n\r\n  // selectedWebsite is passed from WebsiteInfo as a prop\r\n  // websites is passed from RegistrarList as a prop\r\n  renderRegistrarInfo() {\r\n    return(\r\n      <div id=\"registrarInfoDisplay\">\r\n        <RegistrarTitle\r\n          selectedWebsite={this.props.selectedWebsite ? true : false}\r\n          registrarName={this.props.registrar.name}\r\n          goBack={this.props.goBack}\r\n        />\r\n        <div className='list-item'><label>Username:</label><CopyableText value={this.props.registrar.userName}/></div>\r\n        <div className='list-item'><label>Password:</label><CopyableText value={this.props.registrar.password}/></div>\r\n        <div className='list-item'><label>Notes:</label></div>\r\n        <textarea\r\n          rows='10'\r\n          name='notes'\r\n          value={this.props.registrar.notes}\r\n          placeholder='Notes...'\r\n          readOnly\r\n          disabled\r\n        />\r\n        {\r\n          this.props.websites ?\r\n            <div id='registrarButtons'>\r\n              <button onClick={this.enableState.bind(this, 'enableViewWebsites', true)}>Registered Websites</button>\r\n              <button onClick={this.enableState.bind(this, 'enableEditMode', true)}>Edit Registrar</button>\r\n              <button onClick={this.props.deleteRegistrar}>Delete Registrar</button>\r\n            </div>\r\n          : ''\r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderRegistrarEdit () {\r\n    return (\r\n      <div id=\"registrarEdit\">\r\n        <BackButton onClick={this.enableState.bind(this, 'enableEditMode', false)}></BackButton>\r\n        <h2>Edit Registrar</h2>\r\n        <EditRegistrarForm \r\n          registrar={this.props.registrar} \r\n          updateRegistrar={this.props.updateRegistrar} \r\n          disableEditMode={this.enableState.bind(this, 'enableEditMode', false)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderRegistrarWebsites() {\r\n    return (\r\n      <WebsiteList \r\n        goBack={this.enableState.bind(this, 'enableViewWebsites', false)}\r\n        websites={this.props.websites}\r\n        registrars={this.props.registrars}\r\n        hosts={this.props.hosts}\r\n        updateWebsites={this.props.updateWebsites}\r\n        selectedRegistrar={this.props.registrar}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.enableEditMode){\r\n      return this.renderRegistrarEdit();\r\n    }\r\n    if(this.state.enableViewWebsites){\r\n      return this.renderRegistrarWebsites();\r\n    }\r\n    return this.renderRegistrarInfo();\r\n  }\r\n}\r\n\r\nexport default RegistrarInfo;","import React, {Component} from 'react';\r\nimport TextInput from '../General/TextInput';\r\n\r\nclass EditHostForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hostName: this.props.host.name,\r\n      userName: this.props.host.userName,\r\n      password: this.props.host.password,\r\n      notes: this.props.host.notes\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    if(this.state.hostName) {\r\n      // Create updated host object\r\n      var updatedHost = this.props.host;\r\n      updatedHost.name = this.state.hostName;\r\n      updatedHost.userName = this.state.userName;\r\n      updatedHost.password = this.state.password;\r\n      updatedHost.notes = this.state.notes;\r\n\r\n      // Call updateHost(), which is passed from HostList as a prop\r\n      this.props.updateHost(updatedHost);\r\n      this.props.disableEditMode();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"hostEditForm\">\r\n        <form id=\"hostEditInput\">\r\n          <TextInput\r\n            type='text'\r\n            name='hostName'\r\n            value={this.state.hostName}\r\n            onChange={this.handleChange}\r\n            placeholder='Host'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='Username'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            placeholder='Password'\r\n          />\r\n          <textarea\r\n            rows='10'\r\n            name='notes'\r\n            value={this.state.notes}\r\n            onChange={this.handleChange}\r\n            placeholder='Notes...'\r\n          />\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Update Host</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditHostForm;","import React, { Component } from 'react';\r\nimport BackButton from '../General/BackButton'\r\n\r\nclass HostTitle extends Component {\r\n\r\n  render() {\r\n    if(!this.props.selectedWebsite) {\r\n      return(\r\n        <div id='hostTitle'>\r\n          <BackButton onClick={this.props.goBack}></BackButton>\r\n          <h2>Host: {this.props.hostName}</h2>\r\n        </div>\r\n      )\r\n    }\r\n    return(\r\n      <h3>Host: {this.props.hostName}</h3>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HostTitle;","import React, { Component } from 'react';\r\nimport BackButton from '../General/BackButton';\r\nimport EditHostForm from './EditHostForm';\r\nimport WebsiteList from '../Websites/WebsiteList';\r\nimport CopyableText from '../General/CopyableText';\r\nimport HostTitle from './HostTitle';\r\n\r\n// Display host info. Rendered from HostList and WebsiteInfo.\r\nclass HostInfo extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      enableEditMode: false,\r\n      enableViewWebsites: false\r\n    }\r\n  }\r\n\r\n  enableState(state, isEnabled) {\r\n    this.setState({[state] : isEnabled}); // [state] is a computed property name\r\n  }\r\n\r\n  // selectedWebsite is passed from WebsiteInfo as a prop\r\n  // websites is passed from HostList as a prop\r\n  renderHostInfo() {\r\n    return(\r\n      <div id=\"hostInfoDisplay\">\r\n        <HostTitle\r\n          selectedWebsite={this.props.selectedWebsite ? true : false}\r\n          hostName={this.props.host.name}\r\n          goBack={this.props.goBack}\r\n        />\r\n        <div className='list-item'><label>Username:</label><CopyableText value={this.props.host.userName}/></div>\r\n        <div className='list-item'><label>Password:</label><CopyableText value={this.props.host.password}/></div>\r\n        <div className='list-item'><label>Notes:</label></div>\r\n        <textarea\r\n          rows='10'\r\n          name='notes'\r\n          value={this.props.host.notes}\r\n          placeholder='Notes...'\r\n          readOnly\r\n          disabled\r\n        />\r\n        {\r\n          this.props.websites ?\r\n            <div id='hostButtons'>\r\n              <button onClick={this.enableState.bind(this, 'enableViewWebsites', true)}>Hosted Websites</button>\r\n              <button onClick={this.enableState.bind(this, 'enableEditMode', true)}>Edit Host</button>\r\n              <button onClick={this.props.deleteHost}>Delete Host</button>\r\n            </div>\r\n          : ''\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderHostEdit() {\r\n    return (\r\n      <div id=\"hostEdit\">\r\n        <BackButton onClick={this.enableState.bind(this, 'enableEditMode', false)}></BackButton>\r\n        <h2>Edit Host</h2>\r\n        <EditHostForm \r\n          host={this.props.host} \r\n          updateHost={this.props.updateHost} \r\n          disableEditMode={this.enableState.bind(this, 'enableEditMode', false)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderHostWebsites() {\r\n    return (\r\n      <WebsiteList \r\n        goBack={this.enableState.bind(this, 'enableViewWebsites', false)}\r\n        websites={this.props.websites}\r\n        registrars={this.props.registrars}\r\n        hosts={this.props.hosts}\r\n        updateWebsites={this.props.updateWebsites}\r\n        selectedHost={this.props.host}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.enableEditMode){\r\n      return this.renderHostEdit();\r\n    }\r\n    if(this.state.enableViewWebsites){\r\n      return this.renderHostWebsites();\r\n    }\r\n    return this.renderHostInfo();\r\n  }\r\n}\r\n\r\nexport default HostInfo;","import React, { Component } from 'react';\r\nimport BackButton from '../General/BackButton';\r\nimport EditWebsiteForm from './EditWebsiteForm';\r\nimport CopyableText from '../General/CopyableText';\r\nimport RegistrarInfo from '../Registrars/RegistrarInfo';\r\nimport HostInfo from '../Hosts/HostInfo';\r\n\r\nclass WebsiteInfo extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      enableEditMode: false,\r\n      enableViewRegistrar: false,\r\n      enableViewHost: false\r\n    }\r\n  }\r\n\r\n  enableState(state, isEnabled) {\r\n    this.setState({[state] : isEnabled}); // [state] is a computed property name\r\n  }\r\n\r\n  renderWebsiteInfo() {\r\n    return (\r\n      <div id=\"websiteInfoDisplay\">\r\n        <BackButton onClick={this.props.goBack}></BackButton>\r\n        <h2>Website: {this.props.website.name}</h2>\r\n        {this.props.website.registrar && this.props.website.registrar.name ? \r\n          <div className='list-item' onClick={this.enableState.bind(this, 'enableViewRegistrar', true)}>\r\n            <label>\r\n              Registrar: {this.props.website.registrar.name}\r\n            </label>\r\n          </div>\r\n          : ''\r\n        }\r\n        {this.props.website.host && this.props.website.host.name ? \r\n          <div className='list-item' onClick={this.enableState.bind(this, 'enableViewHost', true)}>\r\n            <label>\r\n              Host: {this.props.website.host.name}\r\n            </label>\r\n          </div>\r\n          : ''\r\n        }\r\n        <div className='list-item'><label>URL:</label><CopyableText value={this.props.website.url}/></div>\r\n        <div className='list-item'><label>Username:</label><CopyableText value={this.props.website.userName}/></div>\r\n        <div className='list-item'><label>Password:</label><CopyableText value={this.props.website.password}/></div>\r\n        <div className='list-item'><label>FTP:</label><CopyableText value={this.props.website.ftp}/></div>\r\n        <div className='list-item'><label>Notes:</label></div>\r\n        <textarea\r\n          rows='10'\r\n          name='notes'\r\n          value={this.props.website.notes}\r\n          placeholder='Notes...'\r\n          readOnly\r\n          disabled\r\n        />\r\n        <button onClick={this.enableState.bind(this, 'enableEditMode', true)}>Edit Website</button>\r\n        <button onClick={this.props.deleteWebsite}>Delete Website</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderWebsiteEdit() {\r\n    return (\r\n      <div id=\"websiteEdit\">\r\n        <BackButton onClick={this.enableState.bind(this, 'enableEditMode', false)}></BackButton>\r\n        <h2>Edit Website</h2>\r\n        <EditWebsiteForm \r\n          website={this.props.website} \r\n          updateWebsite={this.props.updateWebsite} \r\n          disableEditMode={this.enableState.bind(this, 'enableEditMode', false)}\r\n          registrars={this.props.registrars}\r\n          hosts={this.props.hosts}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderRegistrarInfo(){\r\n    return (\r\n      <div id='websiteRegistrarInfo'>\r\n        <BackButton onClick={this.enableState.bind(this, 'enableViewRegistrar', false)}></BackButton>\r\n        <h2>Website: {this.props.website.name}</h2>\r\n        <RegistrarInfo \r\n          registrar={this.props.website.registrar}\r\n          selectedWebsite={this.props.website}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderHostInfo(){\r\n    return (\r\n      <div id='websiteHostInfo'>\r\n        <BackButton onClick={this.enableState.bind(this, 'enableViewHost', false)}></BackButton>\r\n        <h2>Website: {this.props.website.name}</h2>\r\n        <HostInfo \r\n          host={this.props.website.host}\r\n          selectedWebsite={this.props.website}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.enableEditMode){\r\n      return this.renderWebsiteEdit();\r\n    }\r\n    if(this.state.enableViewRegistrar){\r\n      return this.renderRegistrarInfo();\r\n    }\r\n    if(this.state.enableViewHost){\r\n      return this.renderHostInfo();\r\n    }\r\n    return this.renderWebsiteInfo();\r\n  }\r\n}\r\n\r\nexport default WebsiteInfo;","import React, {Component} from 'react';\r\nimport SelectRegistrarItem from './SelectRegistrarItem';\r\nimport SelectHostItem from './SelectHostItem';\r\nimport TextInput from '../General/TextInput';\r\n\r\nclass AddWebsiteForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      websiteName: '',\r\n      url: '',\r\n      ftp: '',\r\n      userName: '',\r\n      password: '',\r\n      notes: '',\r\n      registrar: this.props.selectedRegistrar,\r\n      host: this.props.selectedHost\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Create website object\r\n    var website = {\r\n        name: this.state.websiteName,\r\n        url: this.state.url,\r\n        ftp: this.state.ftp,\r\n        userName: this.state.userName,\r\n        password: this.state.password,\r\n        notes: this.state.notes\r\n    }\r\n    if(this.state.registrar) {\r\n      website.registrar = this.state.registrar;\r\n    }\r\n    if(this.state.host) {\r\n      website.host = this.state.host;\r\n    }\r\n    // Call addWebsite(), which is passed from WebsiteList as a prop\r\n    if(website.name && website.url) {\r\n      this.props.addWebsite(website);\r\n      this.props.disableAddWebsite();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const registrars = this.props.registrars.map((r) => (\r\n      <SelectRegistrarItem\r\n        key={r._id}\r\n        registrar={r}\r\n        id={r._id}\r\n      />\r\n    ));\r\n    const hosts = this.props.hosts.map((h) => (\r\n      <SelectHostItem\r\n        key={h._id}\r\n        host={h}\r\n        id={h._id}\r\n      />\r\n    ));\r\n    return (\r\n      <section id=\"websiteAddForm\">\r\n        <form id=\"websiteAddInput\">\r\n          <TextInput\r\n            name='websiteName'\r\n            value={this.state.websiteName}\r\n            onChange={this.handleChange}\r\n            placeholder='Website'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='url'\r\n            value={this.state.url}\r\n            onChange={this.handleChange}\r\n            placeholder='URL'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='ftp'\r\n            value={this.state.ftp}\r\n            onChange={this.handleChange}\r\n            placeholder='FTP'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='Username'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            placeholder='Password'\r\n          />\r\n          {!this.props.selectedRegistrar ?\r\n            <select\r\n              name='registrar'\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=''>---Choose a Registrar---</option>\r\n              <option value=''>----------None----------</option>\r\n              {registrars}\r\n            </select>\r\n            : ''\r\n          }\r\n          {!this.props.selectedHost ?\r\n            <select\r\n              name='host'\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=''>---Choose a Host---</option>\r\n              <option value=''>-------None--------</option>\r\n              {hosts}\r\n            </select>\r\n            : ''\r\n          }\r\n          <textarea\r\n            rows='10'\r\n            name='notes'\r\n            value={this.state.notes}\r\n            onChange={this.handleChange}\r\n            placeholder='Notes...'\r\n          />\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Add Website</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddWebsiteForm;","import React, {Component} from 'react';\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchQuery: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clearSearch = this.clearSearch.bind(this);\r\n  }\r\n\r\n  async handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    await this.setState({ [e.target.name]: e.target.value });\r\n    // Call search(), which is passed to this component as a prop\r\n    this.props.search(this.state.searchQuery);\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    console.log(\"submit\")\r\n\r\n    // Call search(), which is passed to this component as a prop\r\n    this.props.search(this.state.searchQuery);\r\n  }\r\n\r\n  async clearSearch(e) {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n\r\n    await this.setState({searchQuery: ''});\r\n    this.props.search(this.state.searchQuery);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"searchForm\">\r\n        <form id=\"searchInput\">\r\n          <input\r\n            type='text'\r\n            name='searchQuery'\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleChange}\r\n            placeholder='Search'\r\n          />\r\n          <input type='submit' onClick={this.handleSubmit} style={{display: 'none'}}></input>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport * as apiCalls from '../api';\r\nimport WebsiteListItem from './WebsiteListItem';\r\nimport WebsiteInfo from './WebsiteInfo';\r\nimport AddWebsiteForm from './AddWebsiteForm';\r\nimport BackButton from '../General/BackButton';\r\nimport Search from '../General/Search';\r\n\r\nclass WebsiteList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedWebsite: null,\r\n      enableAddWebsite: false\r\n    }\r\n    this.selectWebsite = this.selectWebsite.bind(this);\r\n    this.deselectWebsite = this.deselectWebsite.bind(this);\r\n    this.addWebsite = this.addWebsite.bind(this);\r\n    this.updateWebsite = this.updateWebsite.bind(this);\r\n    this.deleteWebsite = this.deleteWebsite.bind(this);\r\n    this.searchWebsites = this.searchWebsites.bind(this);\r\n  }\r\n\r\n  enableState(state, isEnabled) {\r\n    this.setState({[state] : isEnabled}); // [state] is a computed property name\r\n    this.searchWebsites(''); // Clear search results when changing view\r\n  }\r\n\r\n  selectWebsite(website) {\r\n    this.updateWebsite(website);\r\n    this.setState({selectedWebsite: website})\r\n    this.setState({enableAddWebsite: false});\r\n    this.searchWebsites(''); // Clear search results when changing view\r\n  }\r\n\r\n  deselectWebsite() {\r\n    this.setState({selectedWebsite: null});\r\n  }\r\n\r\n  async addWebsite(website) {\r\n    // Create new website and update state\r\n    let newWebsite = await apiCalls.createWebsite(website);\r\n    this.props.updateWebsites([...this.props.websites, newWebsite]) // ... is the spread operator\r\n  }\r\n\r\n  async updateWebsite(website) {\r\n    // Update website\r\n    let updatedSite = await apiCalls.updateWebsite(website);\r\n    // Find website in websites and replace it with updatedSite\r\n    const websites = this.props.websites.map(website => {\r\n      return (website._id === updatedSite._id ? updatedSite : website);\r\n    });\r\n    // Update state\r\n    if(this.state.selectedWebsite._id === updatedSite._id){\r\n      this.setState({selectedWebsite: updatedSite});\r\n    }\r\n    this.props.updateWebsites(websites)\r\n  }\r\n\r\n  async deleteWebsite(website) {\r\n    this.setState({selectedWebsite: null});\r\n    await apiCalls.removeWebsite(website._id);\r\n    const websites = this.props.websites.filter(w => w._id !== website._id);\r\n    this.props.updateWebsites(websites);\r\n  }\r\n\r\n  async searchWebsites(query) {\r\n    if(query !== '') {\r\n      let matchingSites = await apiCalls.searchWebsites(query);\r\n      this.props.updateWebsites(matchingSites);\r\n    } else {\r\n      let allSites = await apiCalls.getWebsites();\r\n      this.props.updateWebsites(allSites);\r\n    }\r\n  }\r\n\r\n  renderWebsiteList() {\r\n    var websites;\r\n    // If there is a selected host or registrar, only display websites for that host or registrar\r\n    // selectedHost and selectedRegistrar are passed as props from HostInfo and RegistrarInfo, respectively\r\n    if(this.props.selectedHost) {\r\n      websites = this.props.websites.filter(w => w.host && w.host._id === this.props.selectedHost._id);\r\n    }\r\n    else if(this.props.selectedRegistrar) {\r\n      websites = this.props.websites.filter(w => w.registrar && w.registrar._id === this.props.selectedRegistrar._id);\r\n    }\r\n    else {\r\n      websites = this.props.websites;\r\n    }\r\n    const websiteListItems = websites.map((w) => (\r\n      <WebsiteListItem\r\n        key={w._id}\r\n        {...w}\r\n        id={w._id}\r\n        onSelect={this.selectWebsite.bind(this, w)}\r\n      />\r\n    ));\r\n    return (\r\n      <div className=\"WebsiteList\">\r\n        <BackButton onClick={this.props.goBack}></BackButton>\r\n        {this.props.selectedHost ?\r\n          <h2>{this.props.selectedHost.name}: Hosted Websites</h2> \r\n          : ''\r\n        }\r\n        {this.props.selectedRegistrar ? \r\n          <h2>{this.props.selectedRegistrar.name}: Registered Websites</h2> \r\n          : ''\r\n        }\r\n        {!this.props.selectedRegistrar && !this.props.selectedHost ? <h2>All Websites</h2> : ''}\r\n        <Search search={this.searchWebsites}></Search>\r\n        <ul>\r\n          {websiteListItems}\r\n        </ul>\r\n        <button onClick={this.enableState.bind(this, 'enableAddWebsite', true)}>Add Website</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderAddWebsite(){\r\n    return (\r\n      <div id=\"websiteAddNew\">\r\n        <BackButton onClick={this.enableState.bind(this, 'enableAddWebsite', false)}></BackButton>\r\n        <h2>\r\n          {this.props.selectedHost ? \r\n            this.props.selectedHost.name + ': '\r\n            : ''\r\n          }\r\n          {this.props.selectedRegistrar ? \r\n            this.props.selectedRegistrar.name + ': '\r\n            : ''\r\n          }\r\n          New Website\r\n        </h2>\r\n        <AddWebsiteForm \r\n          addWebsite={this.addWebsite} \r\n          disableAddWebsite={this.enableState.bind(this, 'enableAddWebsite', false)}\r\n          registrars={this.props.registrars}\r\n          hosts={this.props.hosts}\r\n          selectedHost={this.props.selectedHost}\r\n          selectedRegistrar={this.props.selectedRegistrar}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderWebsiteInfo(){\r\n    return (\r\n      <WebsiteInfo \r\n        website={this.state.selectedWebsite} \r\n        goBack={this.deselectWebsite}\r\n        updateWebsite={this.updateWebsite}\r\n        deleteWebsite={this.deleteWebsite.bind(this, this.state.selectedWebsite)}\r\n        registrars={this.props.registrars}\r\n        hosts={this.props.hosts}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.selectedWebsite !== null){\r\n      return this.renderWebsiteInfo();\r\n    }\r\n    if(this.state.enableAddWebsite){\r\n      return this.renderAddWebsite();\r\n    }\r\n    return this.renderWebsiteList();\r\n  }\r\n}\r\n\r\nexport default WebsiteList;","import React from 'react';\r\n\r\nconst RegistrarListItem = ({name, onSelect}) => (\r\n  <li>\r\n    <span onClick={onSelect}>\r\n      <strong>{name}</strong>\r\n    </span>\r\n  </li>\r\n)\r\n\r\nexport default RegistrarListItem;","import React, {Component} from 'react';\r\nimport TextInput from '../General/TextInput';\r\n\r\nclass AddRegistrarForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      registrarName: '',\r\n      userName: '',\r\n      password: '',\r\n      notes: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Create registrar object\r\n    var registrar = {\r\n        name: this.state.registrarName,\r\n        userName: this.state.userName,\r\n        password: this.state.password,\r\n        notes: this.state.notes\r\n    }\r\n    // Call addRegistrar(), which is passed from RegistrarList as a prop\r\n    if(registrar.name) {\r\n      this.props.addRegistrar(registrar);\r\n      this.props.disableAddRegistrar();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"registrarAddForm\">\r\n        <form id=\"registrarAddInput\">\r\n          <TextInput\r\n            type='text'\r\n            name='registrarName'\r\n            value={this.state.registrarName}\r\n            onChange={this.handleChange}\r\n            placeholder='Registrar'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='Username'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            placeholder='Password'\r\n          />\r\n          <textarea\r\n            rows='10'\r\n            name='notes'\r\n            value={this.state.notes}\r\n            onChange={this.handleChange}\r\n            placeholder='Notes...'\r\n          />\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Add Registrar</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddRegistrarForm;","import React, { Component } from 'react'\r\nimport * as apiCalls from '../api';\r\nimport RegistrarListItem from './RegistrarListItem';\r\nimport AddRegistrarForm from './AddRegistrarForm';\r\nimport RegistrarInfo from './RegistrarInfo';\r\nimport BackButton from '../General/BackButton';\r\nimport Search from '../General/Search';\r\n\r\nclass RegistrarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedRegistrar: null,\r\n      enableAddRegistrar: false\r\n    }\r\n    this.addRegistrar = this.addRegistrar.bind(this);\r\n    this.selectRegistrar = this.selectRegistrar.bind(this);\r\n    this.deselectRegistrar = this.deselectRegistrar.bind(this);\r\n    this.updateRegistrar = this.updateRegistrar.bind(this);\r\n    this.searchRegistrars = this.searchRegistrars.bind(this);\r\n  }\r\n\r\n  async addRegistrar(registrar) {\r\n    // Create new registrar and update state\r\n    let newRegistrar = await apiCalls.createRegistrar(registrar);\r\n    this.props.updateRegistrars([...this.props.registrars, newRegistrar]) // ... is the spread operator\r\n  }\r\n\r\n  enableState(state, isEnabled) {\r\n    this.setState({[state] : isEnabled}); // [state] is a computed property name\r\n    this.searchRegistrars(''); // Clear search results when changing view\r\n  }\r\n\r\n  selectRegistrar(registrar) {\r\n    this.setState({selectedRegistrar: registrar})\r\n    this.setState({enableAddRegistrar: false});\r\n    this.searchRegistrars(''); // Clear search results when changing view\r\n  }\r\n\r\n  deselectRegistrar() {\r\n    this.setState({selectedRegistrar: null});\r\n  }\r\n\r\n  async updateRegistrar(registrar) {\r\n    // Update registrar\r\n    let updatedReg = await apiCalls.updateRegistrar(registrar);\r\n    // Find registrar in registrars and replace it with updatedReg\r\n    const registrars = this.props.registrars.map(registrar => {\r\n      return (registrar._id === updatedReg._id ? updatedReg : registrar);\r\n    });\r\n    // Update state\r\n    if(this.state.selectedRegistrar._id === updatedReg._id){\r\n      this.setState({selectedRegistrar: updatedReg});\r\n    }\r\n    this.props.updateRegistrars(registrars);\r\n  }\r\n\r\n  async deleteRegistrar(registrar) {\r\n    this.setState({selectedRegistrar: null});\r\n    await apiCalls.removeRegistrar(registrar._id);\r\n    const registrars = this.props.registrars.filter(r => r._id !== registrar._id);\r\n    this.props.updateRegistrars(registrars);\r\n  }\r\n\r\n  async searchRegistrars(query) {\r\n    if(query !== '') {\r\n      let matchingRegistrars = await apiCalls.searchRegistrars(query);\r\n      this.props.updateRegistrars(matchingRegistrars);\r\n    } else {\r\n      let allRegistrars = await apiCalls.getRegistrars();\r\n      this.props.updateRegistrars(allRegistrars);\r\n    }\r\n  }\r\n\r\n  renderRegistrarList() {\r\n    const registrarListItems = this.props.registrars.map((r) => (\r\n      <RegistrarListItem\r\n        key={r._id}\r\n        {...r}\r\n        id={r._id}\r\n        onSelect={this.selectRegistrar.bind(this, r)}\r\n      />\r\n    ));\r\n    return (\r\n      <div className=\"RegistrarList\">\r\n        <BackButton onClick={this.props.goBack}></BackButton>\r\n        <h2>All Registrars</h2>\r\n        <Search search={this.searchRegistrars}></Search>\r\n        <ul>\r\n          {registrarListItems}\r\n        </ul>\r\n        <button onClick={this.enableState.bind(this, 'enableAddRegistrar', true)}>Add Registrar</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderAddRegistrar(){\r\n    return(\r\n      <div id=\"registrarAddNew\">\r\n        <BackButton onClick={this.enableState.bind(this, 'enableAddRegistrar', false)}></BackButton>\r\n        <h2>New Registrar</h2>\r\n        <AddRegistrarForm \r\n          addRegistrar={this.addRegistrar} \r\n          disableAddRegistrar={this.enableState.bind(this, 'enableAddRegistrar', false)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderRegistrarInfo(){\r\n    return (\r\n      <RegistrarInfo \r\n        registrar={this.state.selectedRegistrar} \r\n        goBack={this.deselectRegistrar}\r\n        updateRegistrar={this.updateRegistrar}\r\n        deleteRegistrar={this.deleteRegistrar.bind(this, this.state.selectedRegistrar)}\r\n        websites={this.props.websites}\r\n        registrars={this.props.registrars}\r\n        hosts={this.props.hosts}\r\n        updateWebsites={this.props.updateWebsites}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.selectedRegistrar !== null){\r\n      return this.renderRegistrarInfo();\r\n    }\r\n    if(this.state.enableAddRegistrar){\r\n      return this.renderAddRegistrar();\r\n    }\r\n    return this.renderRegistrarList();\r\n  }\r\n}\r\n\r\nexport default RegistrarList;","import React from 'react';\r\n\r\nconst HostListItem = ({name, onSelect}) => (\r\n  <li>\r\n    <span onClick={onSelect}>\r\n      <strong>{name}</strong>\r\n    </span>\r\n  </li>\r\n)\r\n\r\nexport default HostListItem;","import React, {Component} from 'react';\r\nimport TextInput from '../General/TextInput';\r\n\r\nclass AddHostForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hostName: '',\r\n      userName: '',\r\n      password: '',\r\n      notes: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    // [e.target.name] is a computed property name\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Create host object\r\n    var host = {\r\n        name: this.state.hostName,\r\n        userName: this.state.userName,\r\n        password: this.state.password,\r\n        notes: this.state.notes\r\n    }\r\n    // Call addHost(), which is passed from HostList as a prop\r\n    if(host.name) {\r\n      this.props.addHost(host);\r\n      this.props.disableAddHost();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"hostAddForm\">\r\n        <form id=\"hostAddInput\">\r\n          <TextInput\r\n            type='text'\r\n            name='hostName'\r\n            value={this.state.hostName}\r\n            onChange={this.handleChange}\r\n            placeholder='Host'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='Username'\r\n          />\r\n          <TextInput\r\n            type='text'\r\n            name='password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            placeholder='Password'\r\n          />\r\n          <textarea\r\n            rows='10'\r\n            name='notes'\r\n            value={this.state.notes}\r\n            onChange={this.handleChange}\r\n            placeholder='Notes...'\r\n          />\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Add Host</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddHostForm;","import React, { Component } from 'react'\r\nimport * as apiCalls from '../api';\r\nimport HostListItem from './HostListItem';\r\nimport AddHostForm from './AddHostForm';\r\nimport HostInfo from './HostInfo';\r\nimport BackButton from '../General/BackButton';\r\nimport Search from '../General/Search';\r\n\r\nclass HostList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedHost: null,\r\n      enableAddHost: false\r\n    }\r\n    this.addHost = this.addHost.bind(this);\r\n    this.selectHost = this.selectHost.bind(this);\r\n    this.deselectHost = this.deselectHost.bind(this);\r\n    this.updateHost = this.updateHost.bind(this);\r\n    this.searchHosts = this.searchHosts.bind(this);\r\n  }\r\n\r\n  async addHost(host) {\r\n    // Create new host and update state\r\n    let newHost = await apiCalls.createHost(host);\r\n    this.props.updateHosts([...this.props.hosts, newHost]) // ... is the spread operator\r\n  }\r\n\r\n  enableState(state, isEnabled) {\r\n    this.setState({[state] : isEnabled}); // [state] is a computed property name\r\n    this.searchHosts(''); // Clear search results when changing view\r\n  }\r\n\r\n  selectHost(host) {\r\n    this.setState({selectedHost: host})\r\n    this.setState({enableAddHost: false});\r\n    this.searchHosts(''); // Clear search results when changing view\r\n  }\r\n\r\n  deselectHost() {\r\n    this.setState({selectedHost: null});\r\n  }\r\n\r\n  async updateHost(host) {\r\n    // Update host\r\n    let updatedHost = await apiCalls.updateHost(host);\r\n    // Find host in hosts and replace it with updatedHost\r\n    const hosts = this.props.hosts.map(host => {\r\n      return (host._id === updatedHost._id ? updatedHost : host);\r\n    });\r\n    // Update state\r\n    this.props.updateHosts(hosts)\r\n  }\r\n\r\n  async deleteHost(host) {\r\n    this.setState({selectedHost: null});\r\n    await apiCalls.removeHost(host._id);\r\n    const hosts = this.props.hosts.filter(r => r._id !== host._id);\r\n    this.props.updateHosts(hosts);\r\n  }\r\n\r\n  async searchHosts(query) {\r\n    if(query !== '') {\r\n      let matchingHosts = await apiCalls.searchHosts(query);\r\n      this.props.updateHosts(matchingHosts);\r\n    } else {\r\n      let allHosts = await apiCalls.getHosts();\r\n      this.props.updateHosts(allHosts);\r\n    }\r\n  }\r\n\r\n  renderHostList() {\r\n    const hostListItems = this.props.hosts.map((r) => (\r\n      <HostListItem\r\n        key={r._id}\r\n        {...r}\r\n        id={r._id}\r\n        onSelect={this.selectHost.bind(this, r)}\r\n      />\r\n    ));\r\n    return (\r\n      <div className=\"HostList\">\r\n        <BackButton onClick={this.props.goBack}></BackButton>\r\n        <h2>All Hosts</h2>\r\n        <Search search={this.searchHosts}></Search>\r\n        <ul>\r\n          {hostListItems}\r\n        </ul>\r\n        <button onClick={this.enableState.bind(this, 'enableAddHost', true)}>Add Host</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderAddHost(){\r\n    return(\r\n      <div id=\"hostAddNew\">\r\n        <BackButton onClick={this.enableState.bind(this, 'enableAddHost', false)}></BackButton>\r\n        <h2>New Host</h2>\r\n        <AddHostForm \r\n          addHost={this.addHost} \r\n          disableAddHost={this.enableState.bind(this, 'enableAddHost', false)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderHostInfo(){\r\n    return (\r\n      <HostInfo \r\n        host={this.state.selectedHost} \r\n        goBack={this.deselectHost}\r\n        updateHost={this.updateHost}\r\n        deleteHost={this.deleteHost.bind(this, this.state.selectedHost)}\r\n        websites={this.props.websites}\r\n        registrars={this.props.registrars}\r\n        hosts={this.props.hosts}\r\n        updateWebsites={this.props.updateWebsites}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.selectedHost !== null){\r\n      return this.renderHostInfo();\r\n    }\r\n    if(this.state.enableAddHost){\r\n      return this.renderAddHost();\r\n    }\r\n    return this.renderHostList();\r\n  }\r\n}\r\n\r\nexport default HostList;","import React, { Component } from 'react'\r\nimport * as apiCalls from './api';\r\nimport WebsiteList from './Websites/WebsiteList';\r\nimport RegistrarList from './Registrars/RegistrarList';\r\nimport HostList from './Hosts/HostList';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentView: 'home',\r\n      websites: [],\r\n      registrars: [],\r\n      hosts: []\r\n    }\r\n    this.loadWebsites = this.loadWebsites.bind(this);\r\n    this.loadRegistrars = this.loadRegistrars.bind(this);\r\n    this.loadHosts = this.loadHosts.bind(this);\r\n    this.updateWebsites = this.updateWebsites.bind(this);\r\n    this.updateRegistrars = this.updateRegistrars.bind(this);\r\n    this.updateHosts = this.updateHosts.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.loadAll();\r\n  }\r\n\r\n  async loadWebsites(){\r\n    let websites = await apiCalls.getWebsites();\r\n    this.setState({websites});\r\n  }\r\n\r\n  async loadRegistrars(){\r\n    let registrars = await apiCalls.getRegistrars();\r\n    this.setState({registrars});\r\n  }\r\n\r\n  async loadHosts(){\r\n    let hosts = await apiCalls.getHosts();\r\n    this.setState({hosts});\r\n  }\r\n\r\n  async loadAll() {\r\n    this.loadWebsites();\r\n    this.loadRegistrars();\r\n    this.loadHosts();\r\n  }\r\n\r\n  async setView(view) {\r\n    if(view === 'home') {\r\n      this.loadAll();\r\n    }\r\n    this.setState({currentView : view});\r\n  }\r\n\r\n  async updateWebsites(websites) {\r\n    this.setState({websites: websites});\r\n  }\r\n\r\n  async updateRegistrars(registrars) {\r\n    this.setState({registrars: registrars});\r\n  }\r\n\r\n  async updateHosts(hosts) {\r\n    this.setState({hosts: hosts});\r\n  }\r\n\r\n  renderHomeView() {\r\n    return (\r\n      <div className=\"App\">\r\n        <button onClick={this.setView.bind(this, 'websites')}>Websites</button>\r\n        <button onClick={this.setView.bind(this, 'registrars')}>Registrars</button>\r\n        <button onClick={this.setView.bind(this, 'hosts')}>Hosts</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderWebsiteView() {\r\n    return (\r\n      <div className=\"App\">\r\n        <button onClick={this.setView.bind(this, 'home')}>Home</button>\r\n        <h1>Websites</h1>\r\n        <WebsiteList\r\n          back={this.back}\r\n          goBack={this.setView.bind(this, 'home')}\r\n          websites={this.state.websites}\r\n          registrars={this.state.registrars}\r\n          hosts={this.state.hosts}\r\n          updateWebsites={this.updateWebsites}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderRegistrarView() {\r\n    return (\r\n      <div className=\"App\">\r\n        <button onClick={this.setView.bind(this, 'home')}>Home</button>\r\n        <h1>Domain Name Registrars</h1>\r\n        <RegistrarList \r\n          goBack={this.setView.bind(this, 'home')}\r\n          websites={this.state.websites}\r\n          registrars={this.state.registrars}\r\n          hosts={this.state.hosts}\r\n          updateRegistrars={this.updateRegistrars}\r\n          updateWebsites={this.updateWebsites}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderHostView() {\r\n    return (\r\n      <div className=\"App\">\r\n        <button onClick={this.setView.bind(this, 'home')}>Home</button>\r\n        <h1>Website Hosts</h1>\r\n        <HostList \r\n          goBack={this.setView.bind(this, 'home')}\r\n          websites={this.state.websites}\r\n          registrars={this.state.registrars}\r\n          hosts={this.state.hosts}\r\n          updateHosts={this.updateHosts}\r\n          updateWebsites={this.updateWebsites}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(this.state.currentView === \"websites\") {\r\n      return this.renderWebsiteView();\r\n    }\r\n    if(this.state.currentView === \"registrars\") {\r\n      return this.renderRegistrarView();\r\n    }\r\n    if(this.state.currentView === \"hosts\") {\r\n      return this.renderHostView();\r\n    }\r\n    return this.renderHomeView();\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}